
import java.awt.BorderLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;


public class ElectionGUI extends javax.swing.JFrame {
    
    private ChartPanel chartPanel;

    /*
    Κλάση που περιέχει την μέθοδο main κι εκκινεί ένα παράθυρο, μέσα στο
    οποίο μπορούμε να κατασκευάσουμε ψηφοφορίες, να επιλέξουμε επιτροπές
    και να δούμε το αντίστοιχο γράφημα. Η κατασκευή του GUI έγινε με τον
    builder του Netbeans IDE, και κάποια από τα παρακάτω κομμάτια κώδικα
    είναι auto-generated. Τα γραφήματα δημιουργούνται με τη βοήθεια της
    βιβλιοθήκης JFreeChart.
     */
    public ElectionGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        electionRuleChoice = new javax.swing.ButtonGroup();
        plotArea = new javax.swing.JPanel();
        slidersPanel = new javax.swing.JPanel();
        voterTextLabel = new javax.swing.JLabel();
        voterSlider = new javax.swing.JSlider();
        candidateTextLabel = new javax.swing.JLabel();
        candidateSlider = new javax.swing.JSlider();
        sliderHeader = new javax.swing.JLabel();
        voterTextField = new javax.swing.JTextField();
        candidateTextField = new javax.swing.JTextField();
        committeeTextLabel = new javax.swing.JLabel();
        committeeSlider = new javax.swing.JSlider();
        committeeTextField = new javax.swing.JTextField();
        rulesPanel = new javax.swing.JPanel();
        rulesHeader = new javax.swing.JLabel();
        sntvRadioButton = new javax.swing.JRadioButton();
        bordaRadioButton = new javax.swing.JRadioButton();
        blocRadioButton = new javax.swing.JRadioButton();
        stvRadioButton = new javax.swing.JRadioButton();
        ccRadioButton = new javax.swing.JRadioButton();
        monroeRadioButton = new javax.swing.JRadioButton();
        footnoteLabel = new javax.swing.JLabel();
        clusteringRadioButton = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        buttonsPanel = new javax.swing.JPanel();
        plotButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Committee Elections");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setLocation(new java.awt.Point(200, 100));
        setPreferredSize(new java.awt.Dimension(780, 560));
        setResizable(false);

        plotArea.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        plotArea.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        slidersPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        voterTextLabel.setText("1. Number Of Voters:");

        voterSlider.setMaximum(1000);
        voterSlider.setMinorTickSpacing(100);
        voterSlider.setPaintTicks(true);
        voterSlider.setToolTipText("");
        voterSlider.setValue(500);
        voterSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                voterSliderStateChanged(evt);
            }
        });

        candidateTextLabel.setText("2. Number Of Candidates:");

        candidateSlider.setMaximum(1000);
        candidateSlider.setMinorTickSpacing(100);
        candidateSlider.setPaintTicks(true);
        candidateSlider.setValue(300);
        candidateSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                candidateSliderStateChanged(evt);
            }
        });

        sliderHeader.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        sliderHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sliderHeader.setText("A) Adjust Sliders to Select:");

        voterTextField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        voterTextField.setText("" + voterSlider.getValue());
        voterTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voterTextFieldActionPerformed(evt);
            }
        });

        candidateTextField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        candidateTextField.setText("" + candidateSlider.getValue());
        candidateTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                candidateTextFieldActionPerformed(evt);
            }
        });

        committeeTextLabel.setText("3. Committee Size:");

        committeeSlider.setMinorTickSpacing(10);
        committeeSlider.setPaintTicks(true);
        committeeSlider.setValue(10);
        committeeSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                committeeSliderStateChanged(evt);
            }
        });

        committeeTextField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        committeeTextField.setText("" + committeeSlider.getValue());
        committeeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                committeeTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout slidersPanelLayout = new javax.swing.GroupLayout(slidersPanel);
        slidersPanel.setLayout(slidersPanelLayout);
        slidersPanelLayout.setHorizontalGroup(
            slidersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, slidersPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(slidersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(sliderHeader, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, slidersPanelLayout.createSequentialGroup()
                        .addGroup(slidersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(voterTextLabel)
                            .addComponent(candidateTextLabel)
                            .addComponent(committeeTextLabel))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, slidersPanelLayout.createSequentialGroup()
                        .addGroup(slidersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(candidateSlider, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE)
                            .addComponent(voterSlider, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(committeeSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(slidersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(candidateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(committeeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(voterTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                .addContainerGap())
        );
        slidersPanelLayout.setVerticalGroup(
            slidersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(slidersPanelLayout.createSequentialGroup()
                .addComponent(sliderHeader)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(voterTextLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(slidersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(voterSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(voterTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(candidateTextLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(slidersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(candidateTextField)
                    .addComponent(candidateSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(committeeTextLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(slidersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(committeeSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(committeeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        rulesPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        rulesHeader.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        rulesHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        rulesHeader.setText("B) Choose Committee Election Rule:");

        electionRuleChoice.add(sntvRadioButton);
        sntvRadioButton.setSelected(true);
        sntvRadioButton.setText("Single Non Transferable Vote");

        electionRuleChoice.add(bordaRadioButton);
        bordaRadioButton.setText("k-Borda");

        electionRuleChoice.add(blocRadioButton);
        blocRadioButton.setText("Bloc");

        electionRuleChoice.add(stvRadioButton);
        stvRadioButton.setText("Single Transferable Vote");

        electionRuleChoice.add(ccRadioButton);
        ccRadioButton.setText("Chamberlin-Courant*");

        electionRuleChoice.add(monroeRadioButton);
        monroeRadioButton.setText("Monroe*");

        footnoteLabel.setFont(new java.awt.Font("Tahoma", 2, 10)); // NOI18N
        footnoteLabel.setText("*Greedy approximation algorithms");

        electionRuleChoice.add(clusteringRadioButton);
        clusteringRadioButton.setText("Clustering (k-means)");

        javax.swing.GroupLayout rulesPanelLayout = new javax.swing.GroupLayout(rulesPanel);
        rulesPanel.setLayout(rulesPanelLayout);
        rulesPanelLayout.setHorizontalGroup(
            rulesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rulesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(rulesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rulesHeader, javax.swing.GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE)
                    .addGroup(rulesPanelLayout.createSequentialGroup()
                        .addGroup(rulesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(clusteringRadioButton)
                            .addGroup(rulesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(sntvRadioButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                                .addComponent(bordaRadioButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(footnoteLabel)
                            .addComponent(blocRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(stvRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ccRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(monroeRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        rulesPanelLayout.setVerticalGroup(
            rulesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rulesPanelLayout.createSequentialGroup()
                .addComponent(rulesHeader)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(sntvRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bordaRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(blocRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(stvRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ccRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(monroeRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(clusteringRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(footnoteLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 420, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        buttonsPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        plotButton.setText("Plot");
        plotButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plotButtonActionPerformed(evt);
            }
        });

        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout buttonsPanelLayout = new javax.swing.GroupLayout(buttonsPanel);
        buttonsPanel.setLayout(buttonsPanelLayout);
        buttonsPanelLayout.setHorizontalGroup(
            buttonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, buttonsPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(plotButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        buttonsPanelLayout.setVerticalGroup(
            buttonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonsPanelLayout.createSequentialGroup()
                .addContainerGap(47, Short.MAX_VALUE)
                .addGroup(buttonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(plotButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(plotArea, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(slidersPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(rulesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buttonsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(slidersPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rulesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(plotArea, javax.swing.GroupLayout.PREFERRED_SIZE, 425, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /*
    Οι 3 παρακάτω μέθοδοι ενεργοποιούνται όταν μετακινηθεί ένας από τους
    sliders και ενημερώνουν κατάλληλα τα αντίστοιχα TextFields/ToolTips
    */
    private void voterSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_voterSliderStateChanged
        voterTextField.setText("" + voterSlider.getValue());
        voterSlider.setToolTipText("" + voterSlider.getValue());
    }//GEN-LAST:event_voterSliderStateChanged

    private void candidateSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_candidateSliderStateChanged
        candidateTextField.setText("" + candidateSlider.getValue());
        candidateSlider.setToolTipText("" + candidateSlider.getValue());
    }//GEN-LAST:event_candidateSliderStateChanged

    private void committeeSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_committeeSliderStateChanged
        committeeTextField.setText("" + committeeSlider.getValue());
        committeeSlider.setToolTipText("" + committeeSlider.getValue());
    }//GEN-LAST:event_committeeSliderStateChanged

    /*
    Βασική ροή της εφαρμογής που ενεργοποιείται με το πάτημα του πλήκτρου
    "Plot". Λαμβάνονται από το user interface οι τιμές που δίνει ο χρήστης,
    δημιουργείται η κατάλληλη ψηφοφορία, κι επιλέγεται η επιτροπή βάσει του
    επιλεγμένου κανόνα. Μέχρι στιγμής χρησιμοποιείται μόνο η κανονική
    κατανομή με κέντρο την αρχή των αξόνων, αλλά θα προστεθούν περισσότερα
    σενάρια στην επόμενη φάση. Όταν πατηθεί το συγκεκριμένο κουμπί,
    απενεργοποιούνται σχεδόν όλες οι επιλογές.
    */
    private void plotButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plotButtonActionPerformed
        int k = committeeSlider.getValue();
        committeeSlider.setEnabled(false);
        int n = voterSlider.getValue();
        voterSlider.setEnabled(false);
        int m = candidateSlider.getValue();
        candidateSlider.setEnabled(false);
        
        ArrayList<Voter> voters = (ArrayList<Voter>)(ArrayList<?>)Person
                .gaussianDistribution(Person.personType.VOTER,
                        n, 0, 0, 3, 3, 1, 1);
        ArrayList<Candidate> candidates = (ArrayList<Candidate>)
                (ArrayList<?>)Person.
                        gaussianDistribution(Person.personType.CANDIDATE,
                                m, 0, 0, 3, 3, 1, 1);
        
        Election election = new Election(k, voters, candidates);
        String ruleTxt = "Rule";
        
        ArrayList<Candidate> committee = null;
        if (sntvRadioButton.isSelected()){
            committee =  election.singleNonTrasferableVote();
            ruleTxt = "Single Non Transferable Vote";
        }
        if (bordaRadioButton.isSelected()){
            committee =  election.kBorda();
            ruleTxt = "k-Borda Rule";
        }
        if (blocRadioButton.isSelected()){
            committee =  election.bloc();
            ruleTxt = "Bloc (k-Approval) Rule";
        }
        if (stvRadioButton.isSelected()){
            committee =  election.singleTransferableVote();
            ruleTxt = "Single Transferable Vote";
        }
        if (ccRadioButton.isSelected()){
            committee =  election.greedyCC();
            ruleTxt = "Greedy Chamberlin-Courant";
        }
        if (monroeRadioButton.isSelected()){
            committee =  election.greedyMonroe();
            ruleTxt = "Greedy Monroe";
        }
        if (clusteringRadioButton.isSelected()){
            committee =  election.kMeans();
            ruleTxt = "Clustering Algorithm";
        }
        
        sntvRadioButton.setEnabled(false);
        bordaRadioButton.setEnabled(false);
        blocRadioButton.setEnabled(false);
        stvRadioButton.setEnabled(false);
        ccRadioButton.setEnabled(false);
        monroeRadioButton.setEnabled(false);
        clusteringRadioButton.setEnabled(false);
        voterTextField.setEnabled(false);
        candidateTextField.setEnabled(false);
        committeeTextField.setEnabled(false);
        
        XYSeriesCollection dataset = new XYSeriesCollection();
        
        XYSeries memberDataset = new XYSeries("Committee Members");
        for (Candidate c: committee) {
            memberDataset.add(c.getX(), c.getY());
        }
        dataset.addSeries(memberDataset);
        
        XYSeries candidateDataset = new XYSeries("Candidates");
        for (Candidate c: election.getCandidates()) {
            candidateDataset.add(c.getX(), c.getY());
        }
        dataset.addSeries(candidateDataset);
        
        XYSeries voterDataset = new XYSeries("Voters");
        for (Voter v: election.getVoters()) {
            voterDataset.add(v.getX(), v.getY());
        }
        dataset.addSeries(voterDataset);
        
        JFreeChart chart = ChartFactory.createScatterPlot(ruleTxt, "x",
                "y", dataset, PlotOrientation.VERTICAL, true, true, true);
        
        chartPanel = new ChartPanel(chart);
        
        plotArea.setLayout(new java.awt.BorderLayout());
        plotArea.add(chartPanel,BorderLayout.CENTER);
        plotArea.validate();
        
        plotButton.setEnabled(false);
    }//GEN-LAST:event_plotButtonActionPerformed

    /*
    Πατώντας το πλήκτρο "Clear" η περιοχή του γραφήματος σβήνει, κι
    ενεργοποιούνται πάλι όλες οι επιλογές του interface.
    */
    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        plotArea.removeAll();
        plotArea.revalidate();
        plotArea.repaint();
        
        committeeSlider.setEnabled(true);
        voterSlider.setEnabled(true);
        candidateSlider.setEnabled(true);
        
        sntvRadioButton.setEnabled(true);
        bordaRadioButton.setEnabled(true);
        blocRadioButton.setEnabled(true);
        stvRadioButton.setEnabled(true);
        ccRadioButton.setEnabled(true);
        monroeRadioButton.setEnabled(true);
        clusteringRadioButton.setEnabled(true);
        voterTextField.setEnabled(true);
        candidateTextField.setEnabled(true);
        committeeTextField.setEnabled(true);
        plotButton.setEnabled(true);
    }//GEN-LAST:event_clearButtonActionPerformed

    /*
    Μέθοδοι εισαγωγής τιμής, για τα πλήθη των ψηφοφόρων/υποψήφιων/μελών της
    επιτροπής, στα αντίστοιχα textFields. Γίνεται έλεγχος για την εισαγωγή
    από τον χρήστη, ότι έχει πράγματι δοθεί ως είσοδος (έγκυρος) αριθμός.
    Επίσης με την εισαγωγή, ενημερώνεται κι ο αντίστοιχος slider.
    */
    private void voterTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voterTextFieldActionPerformed
        String votersNo = voterTextField.getText();
        boolean incorrect = true;
        while(incorrect){
            try{
                int n = Integer.parseInt(votersNo);
                if (n < 0 || n > 1000){
                    throw(new Exception());
                }
                incorrect = false;
            }
            catch(Exception e){
                votersNo = JOptionPane.showInputDialog("Invalid input. "
                        + "Please enter an integer between 0 and 1000: ");
         }

        }
        voterSlider.setValue(Integer.parseInt(votersNo));
    }//GEN-LAST:event_voterTextFieldActionPerformed

    private void candidateTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_candidateTextFieldActionPerformed
        String candidatesNo = candidateTextField.getText();
        boolean incorrect = true;
        while(incorrect){
            try{
                int m = Integer.parseInt(candidatesNo);
                if (m < 0 || m > 1000){
                    throw(new Exception());
                }
                incorrect = false;
            }
            catch(Exception e){
                candidatesNo = JOptionPane.showInputDialog("Invalid input."
                        + " Please enter an integer between 0 and 1000: ");
         }

        }
        candidateSlider.setValue(Integer.parseInt(candidatesNo));
    }//GEN-LAST:event_candidateTextFieldActionPerformed

    private void committeeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_committeeTextFieldActionPerformed
        String committeeNo = committeeTextField.getText();
        boolean incorrect = true;
        while(incorrect){
            try{
                int k = Integer.parseInt(committeeNo);
                if (k < 0 || k > 100){
                    throw(new Exception());
                }
                incorrect = false;
            }
            catch(Exception e){
                committeeNo = JOptionPane.showInputDialog("Invalid input."
                        + " Please enter an integer between 0 and 100: ");
         }

        }
        committeeSlider.setValue(Integer.parseInt(committeeNo));
    }//GEN-LAST:event_committeeTextFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ElectionGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ElectionGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ElectionGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ElectionGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ElectionGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton blocRadioButton;
    private javax.swing.JRadioButton bordaRadioButton;
    private javax.swing.JPanel buttonsPanel;
    private javax.swing.JSlider candidateSlider;
    private javax.swing.JTextField candidateTextField;
    private javax.swing.JLabel candidateTextLabel;
    private javax.swing.JRadioButton ccRadioButton;
    private javax.swing.JButton clearButton;
    private javax.swing.JRadioButton clusteringRadioButton;
    private javax.swing.JSlider committeeSlider;
    private javax.swing.JTextField committeeTextField;
    private javax.swing.JLabel committeeTextLabel;
    private javax.swing.ButtonGroup electionRuleChoice;
    private javax.swing.JLabel footnoteLabel;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton monroeRadioButton;
    private javax.swing.JPanel plotArea;
    private javax.swing.JButton plotButton;
    private javax.swing.JLabel rulesHeader;
    private javax.swing.JPanel rulesPanel;
    private javax.swing.JLabel sliderHeader;
    private javax.swing.JPanel slidersPanel;
    private javax.swing.JRadioButton sntvRadioButton;
    private javax.swing.JRadioButton stvRadioButton;
    private javax.swing.JSlider voterSlider;
    private javax.swing.JTextField voterTextField;
    private javax.swing.JLabel voterTextLabel;
    // End of variables declaration//GEN-END:variables
}
